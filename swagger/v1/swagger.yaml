---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/login":
    post:
      summary: Авторизует пользователя и возвращает токен
      tags:
      - Auth
      parameters: []
      responses:
        '202':
          description: Login successful
        '401':
          description: User doesn't exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
        required: true
  "/api/v1/investments":
    get:
      summary: Возвращает все инвестиции текущего пользователя
      tags:
      - Investments
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Investments found
        '404':
          description: Investor not found
    post:
      summary: Создает новую инвестицию
      tags:
      - Investments
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '201':
          description: Investment created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                offering_id:
                  type: integer
                amount:
                  type: number
              required:
              - offering_id
              - amount
        required: true
  "/api/v1/investments/{id}/upload_bank_statement":
    post:
      summary: Загружает банковскую выписку для инвестиции
      tags:
      - Investments
      parameters:
      - name: id
        in: path
        description: Investment ID
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Bank statement uploaded
        '422':
          description: Invalid file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        description: Bank Statement
  "/api/v1/investors/me":
    get:
      summary: Возвращает информацию о текущем инвесторе
      tags:
      - Investors
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Investor found
        '404':
          description: Investor not found
  "/api/v1/investors":
    post:
      summary: Создает нового инвестора
      tags:
      - Investors
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '201':
          description: Investor created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                kyc_verified_at:
                  type: string
                  format: date-time
              required:
              - kyc_verified_at
        required: true
  "/api/v1/offerings":
    get:
      summary: Возвращает список офферингов
      tags:
      - Offerings
      responses:
        '200':
          description: Offerings found
        '404':
          description: Offerings not found
  "/api/v1/users":
    post:
      summary: Создает нового пользователя
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User created
        '401':
          description: User already exists
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
              required:
              - email
              - password
              - role
        required: true
  "/api/v1/me":
    get:
      summary: Возвращает информацию о текущем пользователе
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: User found
        '401':
          description: Unauthorized
  "/api/v1/users/{id}":
    put:
      summary: Обновляет информацию о пользователе
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: User updated
        '401':
          description: Unauthorized
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
        required: true
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
